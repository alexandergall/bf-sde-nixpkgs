diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_mux.c b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_mux.c
index 40593a96..95221f80 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_mux.c
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_mux.c
@@ -281,11 +281,11 @@ init_gpio_4_normal(struct mux_obj_s *self){
         emsg = "GPIO invalid";
         goto err_init_gpio_4_normal;
     }
-    err = gpio_request(self->gpio_num, MUX_GPIO_LABEL);
-    if (err < 0) {
-        emsg = "gpio_request fail";
-        goto err_init_gpio_4_normal;
-    }
+    /* err = gpio_request(self->gpio_num, MUX_GPIO_LABEL); */
+    /* if (err < 0) { */
+    /*     emsg = "gpio_request fail"; */
+    /*     goto err_init_gpio_4_normal; */
+    /* } */
     err = self->_pull_high(self);
     if (err < 0) {
         emsg = "setup default fail";
diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_platform.c b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_platform.c
index 2473de10..5a8d9a2f 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_platform.c
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_platform.c
@@ -1,19 +1,14 @@
 #include <linux/version.h>
 #include <linux/i2c.h>
 //#include <linux/i2c-algo-bit.h>
-#include <linux/i2c-gpio.h>
+#include <linux/platform_data/i2c-gpio.h>
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/slab.h>
 #include <linux/platform_device.h>
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,14,0)
-#include <linux/platform_data/pca954x.h>
-#else
-#include <linux/i2c/pca954x.h>
-#endif
 #include <linux/platform_data/pca953x.h>
-#include <linux/platform_data/at24.h>
+#include <config/eeprom/at24.h>
 
 //#include <asm/gpio.h>
 #define IO_EXPAND_BASE    64
@@ -26,161 +21,50 @@ struct inv_i2c_board_info {
 };
 
 #define bus_id(id)  (id)
-static struct pca954x_platform_mode mux_modes_0[] = {
-    {.adap_id = bus_id(1),},    {.adap_id = bus_id(2),},
-    {.adap_id = bus_id(3),},    {.adap_id = bus_id(4),},
-    {.adap_id = bus_id(5),},    {.adap_id = bus_id(8),},
-};
-static struct pca954x_platform_mode mux_modes_0_0[] = {
-    {.adap_id = bus_id(17),},    {.adap_id = bus_id(18),},
-    {.adap_id = bus_id(19),},    {.adap_id = bus_id(20),},
-    {.adap_id = bus_id(21),},    {.adap_id = bus_id(22),},
-    {.adap_id = bus_id(23),},    {.adap_id = bus_id(24),},
-};
-
-static struct pca954x_platform_mode mux_modes_0_1[] = {
-    {.adap_id = bus_id(25),},    {.adap_id = bus_id(26),},
-    {.adap_id = bus_id(27),},    {.adap_id = bus_id(28),},
-    {.adap_id = bus_id(29),},    {.adap_id = bus_id(30),},
-    {.adap_id = bus_id(31),},    {.adap_id = bus_id(32),},
-};
-
-static struct pca954x_platform_mode mux_modes_0_2[] = {
-    {.adap_id = bus_id(33),},    {.adap_id = bus_id(34),},
-    {.adap_id = bus_id(35),},    {.adap_id = bus_id(36),},
-    {.adap_id = bus_id(37),},    {.adap_id = bus_id(38),},
-    {.adap_id = bus_id(39),},    {.adap_id = bus_id(40),},
-};
-
-static struct pca954x_platform_mode mux_modes_0_3[] = {
-    {.adap_id = bus_id(41),},    {.adap_id = bus_id(42),},
-    {.adap_id = bus_id(43),},    {.adap_id = bus_id(44),},
-    {.adap_id = bus_id(45),},    {.adap_id = bus_id(46),},
-    {.adap_id = bus_id(47),},    {.adap_id = bus_id(48),},
-};
-
-
-static struct pca954x_platform_mode mux_modes_0_7[] = {
-    {.adap_id = bus_id(9),},    {.adap_id = bus_id(10),},
-    {.adap_id = bus_id(11),},    {.adap_id = bus_id(12),},
-};
-static struct pca954x_platform_mode mux_modes_0_7_0[] = {
-    {.adap_id = bus_id(49),},    {.adap_id = bus_id(50),},
-    {.adap_id = bus_id(51),},    {.adap_id = bus_id(52),},
-    {.adap_id = bus_id(53),},    {.adap_id = bus_id(54),},
-    {.adap_id = bus_id(55),},    {.adap_id = bus_id(56),},
-};
-
-static struct pca954x_platform_mode mux_modes_0_7_1[] = {
-    {.adap_id = bus_id(57),},    {.adap_id = bus_id(58),},
-    {.adap_id = bus_id(59),},    {.adap_id = bus_id(60),},
-    {.adap_id = bus_id(61),},    {.adap_id = bus_id(62),},
-    {.adap_id = bus_id(63),},    {.adap_id = bus_id(64),},
-};
-
-static struct pca954x_platform_mode mux_modes_0_7_2[] = {
-    {.adap_id = bus_id(65),},    {.adap_id = bus_id(66),},
-    {.adap_id = bus_id(67),},    {.adap_id = bus_id(68),},
-    {.adap_id = bus_id(69),},    {.adap_id = bus_id(70),},
-    {.adap_id = bus_id(71),},    {.adap_id = bus_id(72),},
-};
-
-static struct pca954x_platform_mode mux_modes_0_7_3[] = {
-    {.adap_id = bus_id(73),},    {.adap_id = bus_id(74),},
-    {.adap_id = bus_id(75),},    {.adap_id = bus_id(76),},
-    {.adap_id = bus_id(77),},    {.adap_id = bus_id(78),},
-    {.adap_id = bus_id(79),},    {.adap_id = bus_id(80),},
-};
-
-
-static struct pca954x_platform_data mux_data_0 = {
-        .modes          = mux_modes_0,
-        .num_modes      = 6,
-};
-static struct pca954x_platform_data mux_data_0_0 = {
-        .modes          = mux_modes_0_0,
-        .num_modes      = 8,
-};
-static struct pca954x_platform_data mux_data_0_1 = {
-        .modes          = mux_modes_0_1,
-        .num_modes      = 8,
-};
-static struct pca954x_platform_data mux_data_0_2 = {
-        .modes          = mux_modes_0_2,
-        .num_modes      = 8,
-};
-static struct pca954x_platform_data mux_data_0_3 = {
-        .modes          = mux_modes_0_3,
-        .num_modes      = 8,
-};
-
-
-static struct pca954x_platform_data mux_data_0_7 = {
-        .modes          = mux_modes_0_7,
-        .num_modes      = 4,
-};
-static struct pca954x_platform_data mux_data_0_7_0 = {
-        .modes          = mux_modes_0_7_0,
-        .num_modes      = 8,
-};
-static struct pca954x_platform_data mux_data_0_7_1 = {
-        .modes          = mux_modes_0_7_1,
-        .num_modes      = 8,
-};
-static struct pca954x_platform_data mux_data_0_7_2 = {
-        .modes          = mux_modes_0_7_2,
-        .num_modes      = 8,
-};
-static struct pca954x_platform_data mux_data_0_7_3 = {
-        .modes          = mux_modes_0_7_3,
-        .num_modes      = 8,
-};
-
-
 static struct i2c_board_info i2c_device_info0[] __initdata = {
-        {"inv_cpld",         0, 0x55, 0, 0, 0},
-        {"pca9548",          0, 0x70, &mux_data_0, 0, 0},	
+  {I2C_BOARD_INFO("inv_cpld", 0x55)},
+  {I2C_BOARD_INFO("pca9548", 0x70)}
 };
 
 static struct i2c_board_info i2c_device_info1[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_0, 0, 0},	
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct i2c_board_info i2c_device_info2[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_1, 0, 0},	
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct i2c_board_info i2c_device_info3[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_2, 0, 0},	
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct i2c_board_info i2c_device_info4[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_3, 0, 0},	
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct i2c_board_info i2c_device_info5[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_3, 0, 0},
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct i2c_board_info i2c_device_info8[] __initdata = {
-        {"inv_cpld",        0, 0x77, 0, 0, 0},
-        {"pca9548",         0, 0x71, &mux_data_0_7, 0, 0},
+  {I2C_BOARD_INFO("inv_cpld", 0x77)},
+  {I2C_BOARD_INFO("pca9548", 0x71)}
 };
 
 static struct i2c_board_info i2c_device_info9[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_7_0, 0, 0},
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct i2c_board_info i2c_device_info10[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_7_1, 0, 0},
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct i2c_board_info i2c_device_info11[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_7_2, 0, 0},
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct i2c_board_info i2c_device_info12[] __initdata = {
-        {"pca9548",         0, 0x72, &mux_data_0_7_3, 0, 0},
+  {I2C_BOARD_INFO("pca9548", 0x72)}
 };
 
 static struct inv_i2c_board_info i2cdev_list[] = {
@@ -272,7 +156,7 @@ static int __init plat_lavender_x86_init(void)
     
         i2c_put_adapter(adap);
         for(j=0; j<i2cdev_list[i].size; j++) {
-            e = i2c_new_device(adap, &i2cdev_list[i].board_info[j] );
+            e = i2c_new_client_device(adap, &i2cdev_list[i].board_info[j] );
         }
     }
 
diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_psoc.c
index 2d5f0dac..fff3b986 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_psoc.c
@@ -27,6 +27,7 @@
 #include <linux/ipmi.h>
 #include <linux/ipmi_smi.h>
 
+#define IPMI_BUF_SIZE 512
 #define IPMI_MAX_INTF            (4)
 #define NETFN_OEM 0x30
 #define CMD_GETDATA 0x31
@@ -66,7 +67,7 @@ DEFINE_MUTEX(ipmi2_mutex);
 static struct ipmi_result ipmiresult;
 static struct device *hwmon_dev;
 static struct kobject *device_kobj;
-static ipmi_user_t ipmi_mh_user = NULL;
+static struct ipmi_user *ipmi_mh_user = NULL;
 static void msg_handler(struct ipmi_recv_msg *msg,void* handler_data);
 static struct ipmi_user_hndl ipmi_hndlrs = {   .ipmi_recv_hndl = msg_handler,};
 
@@ -228,8 +229,11 @@ int start_ipmi_command(char NetFn, char cmd,char *data,int data_length, char* re
     else {
 	struct	ipmi_system_interface_addr addr;
 	struct	kernel_ipmi_msg msg;
-	uint8_t msg_data[data_length];
+	uint8_t msg_data[IPMI_BUF_SIZE];
 		
+	if (data_length > IPMI_BUF_SIZE) {
+	  return -1;
+	}
 	memcpy(msg_data,data,data_length);
 	addr.addr_type = IPMI_SYSTEM_INTERFACE_ADDR_TYPE; 
 	addr.channel = IPMI_BMC_CHANNEL;  
@@ -281,9 +285,12 @@ static ssize_t psoc_ipmi_read(u8 *buf, u8 offset, size_t count)
 
 static ssize_t psoc_ipmi_write(char *buf, unsigned offset, size_t count)
 {
-    uint8_t data[count+1],result[1];
+    uint8_t data[IPMI_BUF_SIZE],result[1];
     int result_len;
 
+    if (count > IPMI_BUF_SIZE - 1) {
+      return 0;
+    }
     data[0] = offset;
     memcpy(&data[1],buf,count);
 
@@ -918,9 +925,7 @@ static const struct attribute_group psoc_group = {
 static void check_switch_temp(void)
 {
         static struct file *f;
-        mm_segment_t old_fs;
 
-        set_fs(get_ds());
         f = filp_open(SWITCH_TEMPERATURE_SOCK,O_RDONLY,0644);
         if(IS_ERR(f)) {
                 return;
@@ -929,14 +934,11 @@ static void check_switch_temp(void)
                 char temp_str[]={0,0,0,0,0,0,0};
                 loff_t pos = 0;
                 u16 temp2 = 0;
-                old_fs = get_fs();
-                set_fs(KERNEL_DS);
                 kernel_read(f, temp_str,6,&pos);
                 temp2 = ((simple_strtoul(temp_str,NULL,10)/1000) <<8 ) & 0xFF00 ;
                 psoc_ipmi_write((u8*)&temp2, SWITCH_TMP_OFFSET, 2);
         }
         filp_close(f,NULL);
-        set_fs(old_fs);
 }
 
 static int psoc_polling_thread(void *p)
diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/onie_tlvinfo.h b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/onie_tlvinfo.h
index 74f3c960..275eff8d 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/onie_tlvinfo.h
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/onie_tlvinfo.h
@@ -5,8 +5,6 @@
 #include <linux/types.h>
 #define strtoul simple_strtoul
 
-#define FALSE   0
-#define TRUE    (!FALSE)
 #define MAX_STRING_SIZE	128
 /*
  * Tlvinf header: Layout of the header for the TlvInfo format
diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/transceiver.c b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/transceiver.c
index 251ada56..869317b3 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/transceiver.c
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/transceiver.c
@@ -276,6 +276,7 @@ _common_setup_page(struct transvr_obj_s *self,
      */
     int retval = DEBUG_TRANSVR_INT_VAL;
     char *emsg = DEBUG_TRANSVR_STR_VAL;
+    int curr_page;
 
     /* Check */
     if ((addr < 0) || (offset < 0) || (len < 0)) {
@@ -283,6 +284,14 @@ _common_setup_page(struct transvr_obj_s *self,
         retval = -1;
         goto err_common_setup_page;
     }
+    curr_page = i2c_smbus_read_byte_data(self->i2c_client_p,
+					 VAL_TRANSVR_PAGE_SELECT_OFFSET);
+    if (curr_page < 0){
+      emsg = "I2C read page failed";
+      retval = -1;
+      goto err_common_setup_page;
+    }
+    self->curr_page = curr_page;
     /* Case1: continue access */
     if ((self->i2c_client_p->addr == addr) &&
         (self->curr_page == page)) {
